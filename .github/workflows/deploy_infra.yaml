name: Deploy Infra

on: 
  workflow_dispatch:
    inputs:
      aws_role:
        description: 'AWS Role to assume'
        required: true
        type: string
      aws_region:
        description: 'Select region'
        required: true
        type: choice
        options:
          - us-east-2
          - ap-southeast-2         

permissions:
  id-token: write
  contents: read

jobs:
  Terraform-Deploy:    
    runs-on: ubuntu-latest
    env:
      TF_VAR_region: ${{ inputs.aws_region }} 

    defaults:
      run:
        working-directory: session-6

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-session-name: GitHubActionsSession
          role-to-assume: ${{ inputs.aws_role }}
          aws-region: ${{ inputs.aws_region }}

      - name: Get aws identity
        run: |
          aws sts get-caller-identity            

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
      
      - name: Terraform Init
        id: tf_init
        run: terraform init     
      
      - name: Terraform Plan
        id: tf_plan
        run: terraform plan -var-file="./environments/dev.tfvars"    
        continue-on-error: false
      
      - name: Terraform Apply
        id: tf_apply
        run: |
          terraform apply -var-file="./environments/dev.tfvars" -auto-approve 
        continue-on-error: false
      
      - name: Get Terraform Outputs
        id: tf_outputs
        run: |
          echo "ecr_repository=$(terraform output -raw ecr_repository)" >> $GITHUB_OUTPUT
          echo "ecs_service=$(terraform output -raw ecs_service)" >> $GITHUB_OUTPUT
          echo "ecs_cluster=$(terraform output -raw ecs_cluster)" >> $GITHUB_OUTPUT
          echo "ecs_task_definition=$(terraform output -raw ecs_task_definition)" >> $GITHUB_OUTPUT

      - name: Deploy to ECS
        uses: ./.github/actions/deploy-to-ecs
        with:
          AWS_REGION: ${{ inputs.aws_region }}
          ECR_REPOSITORY: ${{ steps.tf_outputs.outputs.ecr_repository }}
          ECS_SERVICE: ${{ steps.tf_outputs.outputs.ecs_service }}
          ECS_CLUSTER: ${{ steps.tf_outputs.outputs.ecs_cluster }}
          ECS_TASK_DEFINITION: ${{ steps.tf_outputs.outputs.ecs_task_definition }}
          IAM_ROLE: ${{ inputs.aws_role }}        
        
    

       
